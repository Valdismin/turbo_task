{"version":3,"sources":["Header/Header.module.css","Search/Search.module.css","Users/Users.module.css","Footer/Footer.module.css","Footer/Footer.tsx","Header/Header.tsx","api.ts","Users/Users.tsx","Search/Search.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Footer","className","s","main","Header","text","target","Button","variant","size","color","type","formAction","instance","axios","create","baseURL","GithubAPI","q","get","then","res","data","Users","props","usersList","map","user","idx","login","avatar_url","html_url","repos_url","src","alt","width","renderUsersItem","id","Search","useState","requestText","setRequestText","inputText","setInputText","setUsersList","isRequest","setisRequest","useEffect","items","catch","err","finally","materialInput","Input","value","onChange","e","currentTarget","onBlur","onKeyPress","charCode","input","placeholder","onClick","LinearProgress","length","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.99296519.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Header_main__319_i\",\"text\":\"Header_text__LZBlI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Search_input__kQMKQ\",\"materialInput\":\"Search_materialInput__2AmT7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Users_main__3hRuk\",\"user\":\"Users_user__3Jz0f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Footer_main__3wdtg\"};","import React from \"react\";\r\nimport s from \"./Footer.module.css\"\r\n\r\n\r\nexport const Footer = () => {\r\n    return <div className={s.main}>\r\n        <h5>Made by Kozlovski Vlad for Turbomates Soft</h5>\r\n    </div>\r\n}","import React from \"react\";\r\nimport s from \"./Header.module.css\"\r\nimport {Button} from \"@material-ui/core\";\r\n\r\nexport const Header = () => {\r\n    return <div className={s.main}>\r\n        <div className={s.text}>User Finder</div>\r\n        <form target=\"_blank\">\r\n            <Button variant=\"contained\" size=\"small\" color=\"primary\" type=\"submit\"\r\n                    formAction=\"https://github.com/Valdismin/turbo_task\">See code on Github</Button>\r\n        </form>\r\n    </div>\r\n}","import axios from \"axios\";\r\n\r\n\r\nconst instance =axios.create({\r\n    baseURL: \"https://api.github.com/\"\r\n});\r\n\r\n\r\nexport const GithubAPI = {\r\n    getUsers(q:string) {\r\n        return instance.get(`search/users?q=${q}&page=1`).then(res=>res.data)\r\n    }\r\n}","import React from \"react\";\r\nimport s from \"./Users.module.css\"\r\nimport {Button, Link} from \"@material-ui/core\";\r\n\r\n\r\nexport type usersType = {\r\n    avatar_url: string\r\n    events_url: string\r\n    followers_url: string\r\n    following_url: string\r\n    gists_url: string\r\n    gravatar_id: string\r\n    html_url: string\r\n    id: number\r\n    login: string\r\n    node_id: string\r\n    organizations_url: string\r\n    received_events_url: string\r\n    repos_url: string\r\n    score: number\r\n    site_admin: boolean\r\n    starred_url: string\r\n    subscriptions_url: string\r\n    type: string\r\n    url: string\r\n}\r\ntype propsType = {\r\n    usersList: Array<usersType>\r\n}\r\n\r\nexport const Users = (props: propsType) => {\r\n\r\n    const renderUsersItem = (user: usersType, idx: number) => {\r\n        const {login, avatar_url, html_url,repos_url} = user\r\n        return (\r\n            <ul key={idx}>\r\n                <div className={s.user}>\r\n                    <h1>{login}</h1>\r\n                    <img src={avatar_url} alt=\"\" width=\"300px\"/>\r\n                    <form target=\"_blank\">\r\n                        <Button variant=\"contained\" size=\"small\" color=\"primary\" type=\"submit\"\r\n                                formAction={html_url}>See on Github</Button>\r\n                        <Button variant=\"contained\" size=\"small\" color=\"primary\" type=\"submit\"\r\n                                formAction={repos_url}>See user code on Github</Button>\r\n                    </form>\r\n                </div>\r\n            </ul>\r\n        );\r\n    }\r\n    return <div className={s.main}>\r\n        {props.usersList.map((user) => renderUsersItem(user, user.id))}\r\n    </div>\r\n}","import React, {ChangeEvent, useEffect, KeyboardEvent, useState} from \"react\";\r\nimport {GithubAPI} from \"../api\";\r\nimport s from \"./Search.module.css\"\r\nimport {Button, Input, LinearProgress} from \"@material-ui/core\";\r\nimport {Users, usersType} from \"../Users/Users\";\r\n\r\n\r\nexport const Search = () => {\r\n\r\n    const [requestText, setRequestText] = useState<string>(\"\")\r\n    const [inputText, setInputText] = useState<string>(\"\")\r\n    const [usersList, setUsersList] = useState<Array<usersType>>([])\r\n    const [isRequest, setisRequest] = useState<boolean>(false)\r\n\r\n    useEffect(() => {\r\n        if (requestText !== \"\") {\r\n            setisRequest(true)\r\n            GithubAPI.getUsers(requestText)\r\n                .then((res) => {\r\n                    setUsersList(res.items)\r\n                })\r\n                .catch((err) => {\r\n                    throw err\r\n                })\r\n                .finally(() =>\r\n                    setisRequest(false))\r\n        }\r\n    }, [requestText])\r\n\r\n    const onInputChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setInputText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.charCode === 13) {\r\n            setRequestText(inputText)\r\n        }\r\n    }\r\n    const onButtonClickHandler = () => {\r\n        setRequestText(inputText)\r\n    }\r\n    const onInputBlur = () => {\r\n        setRequestText(inputText)\r\n    }\r\n\r\n\r\n    return <>\r\n        <div className={s.materialInput}><Input value={inputText} onChange={onInputChange} onBlur={onInputBlur}\r\n                                                onKeyPress={onKeyPressHandler}\r\n                                                className={s.input}\r\n                                                placeholder={\"Find users\"}/>\r\n            <span><Button onClick={onButtonClickHandler}\r\n                          variant=\"contained\" size=\"small\"\r\n                          color=\"primary\">Find!</Button></span>\r\n        </div>\r\n        {\r\n            isRequest && <LinearProgress/>\r\n        }\r\n        {\r\n            !requestText || usersList.length < 1 ?\r\n                <h2>No users here. Whould you try to search for someone else?</h2>\r\n                : <Users usersList={usersList}/>\r\n        }\r\n    </>\r\n}\r\n\r\n","import React from 'react';\nimport './App.css';\nimport {Footer} from \"./Footer/Footer\";\nimport {Header} from \"./Header/Header\";\nimport {Search} from \"./Search/Search\";\n\nfunction App() {\n  return <div className='app-wrapper'>\n    <Header/>\n    <div className='app-wrapper-content'>\n      <Search/>\n    </div>\n    <Footer/>\n  </div>\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}